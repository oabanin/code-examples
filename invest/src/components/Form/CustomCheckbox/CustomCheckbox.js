import { memo } from 'react';import OverflowTooltip from 'src/components/Tooltips/OverflowToolTip/OverflowTooltip';import { Checkbox, FormControlLabel } from '@mui/material';import { StyledEngineProvider, styled } from '@mui/material/styles';import cn from 'classnames';import deepEqual from 'deep-equal';import CheckBoxCheckedIcon from 'public/svg/components/checkbox/checkbox-checked.svg';import CheckBoxPartiallyCheckedIcon from 'public/svg/components/checkbox/checkbox-partially-checked.svg';import CheckBoxIcon from 'public/svg/components/checkbox/checkbox-unchecked.svg';import s from './CustomCheckbox.module.scss';const CustomCheckbox = memo(  ({    label,    required,    optional,    checked,    onChange,    size,    readOnly,    className,    partiallyChecked,    tooltip,    ...props  }) => {    if (label) {      return (        <StyledEngineProvider injectFirst>          <FormControlLabel            data-testid="label-checkbox"            classes={{ root: cn(className, s.root) }}            control={              <StyledCheckbox                readOnly={readOnly}                icon={partiallyChecked ? <CheckBoxPartiallyCheckedIcon /> : <CheckBoxIcon />}                checkedIcon={<CheckBoxCheckedIcon />}                checked={checked}                onChange={readOnly ? () => null : onChange}                className={size}                {...props}              />            }            label={tooltip ? <OverflowTooltip>{label}</OverflowTooltip> : label}          />        </StyledEngineProvider>      );    }    return (      <StyledCheckbox        classes={{ root: cn(className, s.root) }}        data-testid="no-label-checkbox"        icon={partiallyChecked ? <CheckBoxPartiallyCheckedIcon /> : <CheckBoxIcon />}        checked={checked}        onChange={onChange}        checkedIcon={<CheckBoxCheckedIcon />}        {...props}      />    );  },  (prevProps, nextProps) => deepEqual({ ...prevProps }, { ...nextProps }),);const StyledCheckbox = styled(Checkbox)(() => ({  '&': {    marginTop: '-14px',    padding: 15,    '@media(min-width:768px)': {      marginTop: '-10px',      padding: 11,    },    '@media(hover)': {      '&:hover': {        background: 'var(--color-secondary-opacity-10)',      },    },    '&.Mui-checked': {      '&:hover': {        background: 'var(--color-primary-opacity-010)',      },    },    '&.Mui-disabled': {      opacity: '0.4',    },  },  '& + span': {    fontFamily: 'var(--text-font-family-primary);',    fontSize: 16,    color: 'var(--color-text)',    paddingLeft: 4,    '@media(min-width:768px)': {      paddingLeft: 8,    },    letterSpacing: 0,    lineHeight: '19px',  },}));export default CustomCheckbox;